1. 복수의 제네릭
..class Person<T, S>
3. 기본 데이터 타입과 제너릭
..참조 데이터 타입에서만 사용할 수 있다. 래퍼(wrapper)클래스를 사용해야 한다. 
4. 제너릭의 생략
..매개변수의 데이터 타입을 알고 있으면 (위에서 썼다면 )생략해도 된다. 
5. 메소드에 적용
--클래스에서만 쓸 수 있는 것이 아니라 메소드에서도 쓸 수 있다. 
6. 제너릭의 제한(Extends)
--제너릭으로 올 수 있는 데이터 타입을 특정 클래스의 자식으로 제한 할 수 있다. 
--class Person<T extends Info> {}


Generics 클래스 사용법
제너릭 타입은 타입을 파라미터로 가지는 클래스와 인터페이스를 말한다
제너릭 타입은 클래스 또는 인터페이스 이름 뒤에 <> 부호가 붙고 사이에 타입 파라미터가 위치한다.
public class 클래스명<T> {...}
public interface 인터페이스명<T>{...}

Generic 클래스 예시
public class GenericBox<T>{
	private T data;
	여기서 <T>를 타입 파라미터로 라고 한다 또는 가상의 자료형 이라고 하고 
	메서드 호출과 비슷하게 이해할 수도 있는 GenericBox라는 메서드에 String이라는 인자를
	넘겨서 String 타입의 GenericBox를 리턴 받는 다는 의미이다. 
GenericBox <String> genericBox = new GenericBox();
genericBoc.setData("내문자열")

interface ExInterfaceGeneric<T>{
		T example();
		}
class ExGeneric implements ExInterfaceGeneric<String> {
	@Override
	public String example() {
		return null;
	}
}//인터페이스도 클래스처럼 제너릭으로 설정해두고 활용할 수 있다. 